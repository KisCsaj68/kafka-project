services:
  postgres:
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - "./volumes/postgres:/var/lib/postgresql/data"
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=asdqwe
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  broker:
    image: bitnami/kafka:latest
    # Prod setup: 4 broker, 3 replication per partition, 8-15 partitions 
    container_name: broker
    hostname: broker
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@broker:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  api:
    container_name: api
    ports:
      - "3500:3500"
    image: kafka/api
    environment:
      PRODUCER_BOOTSTRAP_SERVERS: 'broker:9092'
    healthcheck:
      test: ["CMD-SHELL", "curl -s --fail http://localhost:3500/healthz && exit 0 || exit 1"]
      interval: 2s
      timeout: 10s
      retries: 100
      start_period: 30s
    depends_on:
      broker:
        condition: service_healthy
      postgres:
        condition: service_started
      dbmigrator:
        condition: service_started
  dbmigrator:
    container_name: migrator
    image: kafka/api
    depends_on:
      broker:
        condition: service_healthy
      postgres:
        condition: service_started
    command:
      - -cp
      - api-0.0.1-SNAPSHOT-jar-with-dependencies.jar
      - com.kafka.api.DBMigrator
      - --spring.jpa.hibernate.ddl-auto=update
  agent:
    container_name: agent
    image: kafka/agent
    depends_on:
      broker:
        condition: service_healthy
    command:
      - -cp
      - agent-0.0.1-SNAPSHOT-jar-with-dependencies.jar
      - com.kafka.agent.AgentApplication
      - --spring.kafka.bootstrap-servers=broker:9092
      - --spring.kafka.consumer.auto-offset-reset=earliest